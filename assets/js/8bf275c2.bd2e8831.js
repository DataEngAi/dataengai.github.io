"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6693],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=s(r),f=a,h=c["".concat(p,".").concat(f)]||c[f]||u[f]||o;return r?n.createElement(h,i(i({ref:t},m),{},{components:r})):n.createElement(h,i({ref:t},m))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},4974:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={slug:"temporal-join",title:"Why Temporal Join is Stream Processing\u2019s Superpower",authors:["matthias"],tags:["Join","Flink","DataSQRL"]},i=void 0,l={permalink:"/blog/temporal-join",editUrl:"https://github.com/DataSQRL/datasqrl.github.io/edit/main/blog/2023-07-10-temporal-join.md",source:"@site/blog/2023-07-10-temporal-join.md",title:"Why Temporal Join is Stream Processing\u2019s Superpower",description:"Stream processing technologies like Apache Flink introduce a new type of data transformation that\u2019s very powerful: the temporal join. Temporal joins add context to data streams while being efficient and fast to execute.",date:"2023-07-10T00:00:00.000Z",formattedDate:"July 10, 2023",tags:[{label:"Join",permalink:"/blog/tags/join"},{label:"Flink",permalink:"/blog/tags/flink"},{label:"DataSQRL",permalink:"/blog/tags/data-sqrl"}],readingTime:8.36,hasTruncateMarker:!0,authors:[{name:"Matthias Broecheler",title:"Founder of DataSQRL",url:"https://github.com/mbroecheler",imageURL:"/img/headshots/matthias1.png",key:"matthias"}],frontMatter:{slug:"temporal-join",title:"Why Temporal Join is Stream Processing\u2019s Superpower",authors:["matthias"],tags:["Join","Flink","DataSQRL"]},prevItem:{title:"To Preprocess or to Query, that\u2019s the Question!",permalink:"/blog/preprocess-or-query"},nextItem:{title:"Why Apache Flink and GraphQL Are like Peanut Butter and Jelly",permalink:"/blog/flink-graphql-peanut-butter-jelly"}},p={authorsImageUrls:[void 0]},s=[],m={toc:s},c="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("head",null,(0,a.kt)("meta",{property:"og:image",content:"/img/dev/temporal_join.png"}),(0,a.kt)("meta",{name:"twitter:image",content:"/img/dev/temporal_join.png"})),(0,a.kt)("p",null,"Stream processing technologies like Apache Flink introduce a new type of data transformation that\u2019s very powerful: the temporal join. Temporal joins add context to data streams while being efficient and fast to execute."),(0,a.kt)("img",{src:"/img/dev/temporal_join.svg",alt:"Temporal Join >",width:"30%"}),(0,a.kt)("p",null,"This article introduces the temporal join, compares it to the traditional inner join, explains when to use it, and why it is a secret superpower."),(0,a.kt)("p",null,"Table of Contents:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#review"},"The Join: A Quick Review")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#tempjoin"},"The Temporal Join: Linking Stream and State")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#tempinner"},"Temporal Join vs Inner Join")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#efficient"},"Why Temporal Joins are Fast and Efficient")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#easy"},"Temporal Joins Made Easy to Use")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#summary"},"Summary"))))}u.isMDXComponent=!0}}]);