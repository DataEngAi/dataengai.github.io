"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8786],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=l(n),m=o,h=c["".concat(p,".").concat(m)]||c[m]||d[m]||a;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[c]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5036:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={},i="Protein Analysis for Happy Squirrels",s={unversionedId:"getting-started/tutorials/seedshop-protein",id:"getting-started/tutorials/seedshop-protein",title:"Protein Analysis for Happy Squirrels",description:"For our seed shop, we want to add",source:"@site/docs/getting-started/tutorials/seedshop-protein.md",sourceDirName:"getting-started/tutorials",slug:"/getting-started/tutorials/seedshop-protein",permalink:"/docs/getting-started/tutorials/seedshop-protein",draft:!1,editUrl:"https://github.com/DataSQRL/datasqrl.github.io/edit/main/docs/docs/getting-started/tutorials/seedshop-protein.md",tags:[],version:"current",frontMatter:{}},p={},l=[],u={toc:l},c="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"protein-analysis-for-happy-squirrels"},"Protein Analysis for Happy Squirrels"),(0,o.kt)("p",null,"For our seed shop, we want to add\nanother recommendation service that recommends products our customers are likely\nto buy but might not have bought yet. \\\nOur nut shop customers closely watch their protein intake.\nAfter all, if you are climbing trees all day you\nneed to feed your muscles. That's why we want to recommend products that\nhave a similar protein content to the average amount of protein a customer\nhas recently consumed."),(0,o.kt)("p",null,"First, let's compute the average recent protein intake based on a customer's\npast purchases."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sqrl"},"Customers.recent_avg_protein :=\n      SELECT SUM(e.quantity * p.weight_in_gram * n.protein)/SUM(e.quantity * p.weight_in_gram)\n      FROM @.purchases.items e JOIN e.product p JOIN p.nutrition n\n      WHERE e.parent.date > now() - INTERVAL 6 MONTH;\n")),(0,o.kt)("p",null,"In the ",(0,o.kt)("inlineCode",{parentName:"p"},"FROM")," clause of this query, we are joining the order items a customer has\nbought with the product information and the nutritional information so we can compute\nthe average protein content. Note, how we are using the previously defined relationships\ninstead of table names in the JOIN expressions to chain the relationships together.\nIn the ",(0,o.kt)("inlineCode",{parentName:"p"},"WHERE")," clause we are filtering out any order that is older than 6 months by using\nthe special ",(0,o.kt)("inlineCode",{parentName:"p"},"now()")," function which is used to define recent time slices."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"now()")," stands for the current system time which means the result of this query will\nchange as time progresses."),(0,o.kt)("p",null,"We will use the value ",(0,o.kt)("inlineCode",{parentName:"p"},"recent_avg_protein")," defined above to define another\nnested table that ranks all the nut products we offer in the store by similarity\nof protein content."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sqrl"},"Customers.products_by_protein :=\nSELECT p.id AS productid, \n       ABS(p.nutrition.protein - @.recent_avg_protein) AS protein_difference \nFROM Products p ORDER BY protein_difference ASC LIMIT 20;\n")),(0,o.kt)("p",null,"Finally, we add a relationship to this nested table to relate those records back\nto our ",(0,o.kt)("inlineCode",{parentName:"p"},"Products")," table:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sqrl"},"Customers.products_by_protein.product := JOIN Products ON Products.id = _productid LIMIT 1;\n")))}d.isMDXComponent=!0}}]);