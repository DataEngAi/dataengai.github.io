"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[674],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(r),p=a,h=d["".concat(l,".").concat(p)]||d[p]||m[p]||o;return r?n.createElement(h,i(i({ref:t},u),{},{components:r})):n.createElement(h,i({ref:t},u))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},2591:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={slug:"recommendations-current23",title:"Personalized Recommendations for Current23 with Vector Embeddings in Flink and Kafka",authors:["matthias"],tags:["AI","Kafka","Flink","Postgres","microservice","DataSQRL"]},i=void 0,s={permalink:"/blog/recommendations-current23",editUrl:"https://github.com/DataSQRL/datasqrl.github.io/edit/main/blog/2023-09-21-recommendations-current23-ai.md",source:"@site/blog/2023-09-21-recommendations-current23-ai.md",title:"Personalized Recommendations for Current23 with Vector Embeddings in Flink and Kafka",description:"Let\u2019s build a personalized recommendation engine using AI as an event-driven microservice with Kafka, Flink, and Postgres. And since Current23 is starting soon, we will use the events of this event-driven conference as our input data (sorry for the pun). You\u2019ll learn how to apply AI techniques to streaming data and what talks you want to attend at the Kafka conference - double win!",date:"2023-09-21T00:00:00.000Z",formattedDate:"September 21, 2023",tags:[{label:"AI",permalink:"/blog/tags/ai"},{label:"Kafka",permalink:"/blog/tags/kafka"},{label:"Flink",permalink:"/blog/tags/flink"},{label:"Postgres",permalink:"/blog/tags/postgres"},{label:"microservice",permalink:"/blog/tags/microservice"},{label:"DataSQRL",permalink:"/blog/tags/data-sqrl"}],readingTime:10.695,hasTruncateMarker:!0,authors:[{name:"Matthias Broecheler",title:"CEO of DataSQRL",url:"https://github.com/mbroecheler",imageURL:"/img/headshots/matthias1.png",key:"matthias"}],frontMatter:{slug:"recommendations-current23",title:"Personalized Recommendations for Current23 with Vector Embeddings in Flink and Kafka",authors:["matthias"],tags:["AI","Kafka","Flink","Postgres","microservice","DataSQRL"]},prevItem:{title:"Personalized AI Search with Vector Embeddings for Semantic Profiles",permalink:"/blog/personalized-ai-search"},nextItem:{title:"To Preprocess or to Query, that\u2019s the Question!",permalink:"/blog/preprocess-or-query"}},l={authorsImageUrls:[void 0]},c=[{value:"What We Will Build",id:"what-we-will-build",level:2}],u={toc:c},d="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("head",null,(0,a.kt)("meta",{property:"og:image",content:"/img/blog/recommendationsCurrent23.png"}),(0,a.kt)("meta",{name:"twitter:image",content:"/img/blog/recommendationsCurrent23.png"})),(0,a.kt)("p",null,"Let\u2019s build a personalized recommendation engine using AI as an event-driven microservice with Kafka, Flink, and Postgres. And since Current23 is starting soon, we will use the events of this event-driven conference as our input data (sorry for the pun). You\u2019ll learn how to apply AI techniques to streaming data and what talks you want to attend at the Kafka conference - double win!"),(0,a.kt)("div",{style:{float:"right",width:"40%"}},(0,a.kt)("iframe",{width:"100%",height:"100%",src:"https://www.youtube.com/embed/gI_TRF1z-So",title:"DataSQRL Introduction",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0})),(0,a.kt)("p",null,"We will implement the whole microservice in 50 lines of code thanks to the DataSQRL compiler, which eliminates all the data plumbing so we can focus on building."),(0,a.kt)("p",null,"Watch the video to see the microservice in action or read below for step-by-step building instructions and details."),(0,a.kt)("h2",{id:"what-we-will-build"},"What We Will Build"),(0,a.kt)("p",null,"We are going to build a recommendation engine and semantic search that uses AI to provide personalized results for users based on user interactions."),(0,a.kt)("p",null,"Let\u2019s break that down:\nOur input data is a stream of conference events, namely the talks with title, abstract, speakers, time, and so forth. We consume this data from an external data source."),(0,a.kt)("p",null,"In addition, our microservice has endpoints to capture which talks a user has liked and what interests a user has expressed. We use those user interactions to create a semantic user profile for personalized recommendations and personalized search results."),(0,a.kt)("p",null,"We create the semantic user profile through vector embeddings, an AI technique for mapping text to numbers in a way that preserves the content of the text for comparison. It\u2019s a great tool for representing the meaning of text in a computable way. It's like mapping addresses (i.e. street, city, zip, country) onto geo-coordinates. It\u2019s hard to compare two addresses, but easy to compute the distance between two geo-coordinates. Vector embeddings do the same thing for natural language text."),(0,a.kt)("p",null,"Those semantic profiles are then used to serve recommendations and personalized search results."))}m.isMDXComponent=!0}}]);