"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1306],{5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>f});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=a.createContext({}),s=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(m.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,m=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),u=r,f=d["".concat(m,".").concat(u)]||d[u]||c[u]||i;return n?a.createElement(f,o(o({ref:t},p),{},{components:n})):a.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7468:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(8168),r=(n(6540),n(5680));const i={title:"Time Functions"},o="Time Functions",l={unversionedId:"reference/sqrl/functions/time",id:"reference/sqrl/functions/time",title:"Time Functions",description:"The time function package contains functions to convert, aggregate, and manipulate timestamps and DateTime scalars. The time function package is part of the standard SQRL function library.",source:"@site/docs/reference/sqrl/functions/time.md",sourceDirName:"reference/sqrl/functions",slug:"/reference/sqrl/functions/time",permalink:"/docs/reference/sqrl/functions/time",draft:!1,editUrl:"https://github.com/DataSQRL/datasqrl.github.io/edit/main/docs/reference/sqrl/functions/time.md",tags:[],version:"current",frontMatter:{title:"Time Functions"},sidebar:"docs",previous:{title:"String Functions",permalink:"/docs/reference/sqrl/functions/string"},next:{title:"Text Functions",permalink:"/docs/reference/sqrl/functions/text"}},m={},s=[{value:"Reference",id:"reference",level:2}],p={toc:s},d="wrapper";function c(e){let{components:t,...n}=e;return(0,r.yg)(d,(0,a.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"time-functions"},"Time Functions"),(0,r.yg)("p",null,"The time function package contains functions to convert, aggregate, and manipulate timestamps and DateTime scalars. The time function package is part of the standard SQRL function library."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"IMPORT time.*; -- imports all time functions\nIMPORT time.dayOfWeek; -- imports single time function\n")),(0,r.yg)("h2",{id:"reference"},"Reference"),(0,r.yg)("p",null,"The following table lists all the functions in the time package with a short description. The table also specifies whether a function is a time-window function."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Function Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"EndOfSecond(timestamp, multiple, offset)")),(0,r.yg)("td",{parentName:"tr",align:null},"Calculates the end of the second for a given timestamp, adjusted by multiples of seconds and a second offset. For example, ",(0,r.yg)("inlineCode",{parentName:"td"},"EndOfSecond(NOW(), 1, 0)")," returns the end of the current second.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"EndOfMinute(timestamp, multiple, offset)")),(0,r.yg)("td",{parentName:"tr",align:null},"Computes the end of the minute for the provided timestamp, optionally adjusted by multiples of minutes and a minute offset. For example, ",(0,r.yg)("inlineCode",{parentName:"td"},"EndOfMinute(NOW(), 1, 0)")," will return the end of the current minute.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"EndOfHour(timestamp, multiple, offset)")),(0,r.yg)("td",{parentName:"tr",align:null},"Computes the end of the hour for a given timestamp, adjusted by a multiple of hours and an hour offset. For example, ",(0,r.yg)("inlineCode",{parentName:"td"},"EndOfHour(NOW(), 1, 0)")," computes the end of the current hour, while ",(0,r.yg)("inlineCode",{parentName:"td"},"EndOfHour(NOW(), 2, 0)")," computes the end of the next hour.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"EndOfWeek(timestamp, multiple, offset)")),(0,r.yg)("td",{parentName:"tr",align:null},"Computes the end of the week for a given timestamp, taking into account week multiples and a day offset. For example, ",(0,r.yg)("inlineCode",{parentName:"td"},"EndOfWeek(NOW(), 1, 0)")," will return the end of the current week.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"EndOfMonth(timestamp, multiple, offset)")),(0,r.yg)("td",{parentName:"tr",align:null},"Finds the last moment of the month for a given timestamp, adjustable by multiples of months and a day offset. For example, ",(0,r.yg)("inlineCode",{parentName:"td"},"EndOfMonth(NOW(), 1, 0)")," finds the end of the current month.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"EndOfYear(timestamp, multiple, offset)")),(0,r.yg)("td",{parentName:"tr",align:null},"Calculates the last moment of the year for a given timestamp, adjusting by multiples of years and a day offset. For example, ",(0,r.yg)("inlineCode",{parentName:"td"},"EndOfYear(NOW(), 1, 0)")," finds the end of the current year.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"EpochMilliToTimestamp(epochMillis)")),(0,r.yg)("td",{parentName:"tr",align:null},"Converts milliseconds since the Unix epoch (January 1, 1970, 00:00:00 GMT) to a TIMESTAMP. For example, ",(0,r.yg)("inlineCode",{parentName:"td"},"EpochMilliToTimestamp(1609459200000L)")," converts the given epoch milliseconds to a timestamp.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"ParseTimestamp(s, format)")),(0,r.yg)("td",{parentName:"tr",align:null},"Parses a timestamp from a given string using the specified format. For example, ",(0,r.yg)("inlineCode",{parentName:"td"},"ParseTimestamp('2021-01-01T12:00:00Z', 'yyyy-MM-dd\\'T\\'HH:mm:ssX')")," returns the corresponding timestamp.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"TimestampToEpoch(timestamp)")),(0,r.yg)("td",{parentName:"tr",align:null},"Converts a TIMESTAMP to epoch seconds. For example, ",(0,r.yg)("inlineCode",{parentName:"td"},"TimestampToEpoch(TO_TIMESTAMP('1970-01-01 00:00:00'))")," returns 0.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"TimestampToEpochMilli(timestamp)")),(0,r.yg)("td",{parentName:"tr",align:null},"Converts a TIMESTAMP to epoch milliseconds. For example, ",(0,r.yg)("inlineCode",{parentName:"td"},"TimestampToEpochMilli(TO_TIMESTAMP('1970-01-01 00:00:00'))")," returns 0.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"EndOfDay(timestamp, multiple, offset)")),(0,r.yg)("td",{parentName:"tr",align:null},"Determines the end of the day for a given timestamp, with adjustments possible through multiples of days and an offset in days. For example, ",(0,r.yg)("inlineCode",{parentName:"td"},"EndOfDay(NOW(), 1, 0)")," will return the very end of the current day.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"AtZone(timestamp, zone)")),(0,r.yg)("td",{parentName:"tr",align:null},"Converts a timestamp to a different time zone specified by ",(0,r.yg)("inlineCode",{parentName:"td"},"zone"),". For example, ",(0,r.yg)("inlineCode",{parentName:"td"},"AtZone(NOW(), 'America/New_York')")," converts the current timestamp to Eastern Standard Time.")))))}c.isMDXComponent=!0}}]);