"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[505],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>f});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(a),m=n,f=c["".concat(s,".").concat(m)]||c[m]||h[m]||i;return a?r.createElement(f,l(l({ref:t},u),{},{components:a})):r.createElement(f,l({ref:t},u))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:n,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},6695:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const i={slug:"flink-graphql-peanut-butter-jelly",title:"Why Apache Flink and GraphQL Are like Peanut Butter and Jelly",authors:["matthias"],tags:["GraphQL","Flink","DataSQRL"]},l="Why Apache Flink and GraphQL Are like Peanut Butter and Jelly",o={permalink:"/blog/flink-graphql-peanut-butter-jelly",editUrl:"https://github.com/DataSQRL/datasqrl.github.io/edit/main/blog/2023-06-27-flink-graphql.md",source:"@site/blog/2023-06-27-flink-graphql.md",title:"Why Apache Flink and GraphQL Are like Peanut Butter and Jelly",description:"In the world of data-driven applications, Apache Flink is a powerful tool that transforms streams of raw data into valuable results. But how do you make these results accessible to users, customers, or consumers of your application? Most often, we found the answer to that question was: GraphQL. GraphQL gives users a flexible way to query for data, makes it easy to ingest events, and supports pushing data updates to the user in real-time.",date:"2023-06-27T00:00:00.000Z",formattedDate:"June 27, 2023",tags:[{label:"GraphQL",permalink:"/blog/tags/graph-ql"},{label:"Flink",permalink:"/blog/tags/flink"},{label:"DataSQRL",permalink:"/blog/tags/data-sqrl"}],readingTime:8.47,hasTruncateMarker:!0,authors:[{name:"Matthias Broecheler",title:"Founder of DataSQRL",url:"https://github.com/mbroecheler",imageURL:"/img/headshots/matthias1.png",key:"matthias"}],frontMatter:{slug:"flink-graphql-peanut-butter-jelly",title:"Why Apache Flink and GraphQL Are like Peanut Butter and Jelly",authors:["matthias"],tags:["GraphQL","Flink","DataSQRL"]},nextItem:{title:"Simplifying Apache Flink Application Development with DataSQRL",permalink:"/blog/simplifying-flink-app-development"}},s={authorsImageUrls:[void 0]},p=[{value:"How To Access Flink Results?",id:"access",level:2}],u={toc:p},c="wrapper";function h(e){let{components:t,...a}=e;return(0,n.kt)(c,(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"In the world of data-driven applications, Apache Flink is a powerful tool that transforms streams of raw data into valuable results. But how do you make these results accessible to users, customers, or consumers of your application? Most often, we found the answer to that question was: GraphQL. GraphQL gives users a flexible way to query for data, makes it easy to ingest events, and supports pushing data updates to the user in real-time."),(0,n.kt)("img",{src:"/img/blog/flink_graphql.svg",alt:"Flink hearts GraphQL >",width:"40%"}),(0,n.kt)("p",null,"In this blog post, we\u2019ll discuss what GraphQL is and why it is a good fit for Flink applications. Like peanut butter and jelly, Flink and GraphQL don\u2019t seem related but the combination is surprisingly good."),(0,n.kt)("p",null,"Table of Contents:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#access"},"How To Access Flink Results?")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#graphql"},"What is GraphQL?")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#benefit1"},"Benefit #1: Flexible Access for Data APIs")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#benefit2"},"Benefit #2: Realtime Data Updates with GraphQL Subscriptions")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#benefit3"},"Benefit #3: Simplify Event Ingestion with GraphQL Mutations")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#downsides"},"Downsides of using GraphQL in Flink Applications")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#howto"},"How to Build GraphQL APIs with Flink"))),(0,n.kt)("h2",{id:"access"},"How To Access Flink Results?"),(0,n.kt)("p",null,"Quick background before we dive into the details. ",(0,n.kt)("a",{parentName:"p",href:"https://flink.apache.org/"},"Apache Flink")," is a scalable stream processor that can ingest data from multiple sources, integrate, transform, and analyze the data, and produce results in real time. Apache Flink is the brain of your data processing operations."),(0,n.kt)("img",{src:"/img/external/flink_logo.svg",alt:"Flink Logo >",width:"30%"}),(0,n.kt)("p",null,"But Apache Flink cannot make the processed results accessible to users of your application. Flink has an API, but that API is only for administering and monitoring Flink jobs. It doesn\u2019t give outside users access to the result data. In other words, Flink is a brain without a mouth to communicate results externally."),(0,n.kt)("p",null,"To make results accessible, you have to write them somewhere and expose them through an interface. But how? We have built a number of Flink applications and in most cases, the answer was: write the results to a database or Kafka and expose them through an API. Over the years, our default choice for the API has become GraphQL. Here\u2019s why."))}h.isMDXComponent=!0}}]);