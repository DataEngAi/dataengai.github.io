"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5042],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(r),m=o,d=p["".concat(i,".").concat(m)]||p[m]||f[m]||a;return r?n.createElement(d,c(c({ref:t},u),{},{components:r})):n.createElement(d,c({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:o,c[1]=s;for(var l=2;l<a;l++)c[l]=r[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7371:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>f,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const a={},c="JSON",s={unversionedId:"reference/sources/format/json",id:"reference/sources/format/json",title:"JSON",description:"DataSQRL supports JSON as a data format.",source:"@site/docs/reference/sources/format/json.md",sourceDirName:"reference/sources/format",slug:"/reference/sources/format/json",permalink:"/docs/reference/sources/format/json",draft:!1,editUrl:"https://github.com/DataSQRL/datasqrl.github.io/edit/main/docs/docs/reference/sources/format/json.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Data Format",permalink:"/docs/category/data-format"},next:{title:"CSV",permalink:"/docs/reference/sources/format/csv"}},i={},l=[{value:"Configuration",id:"configuration",level:2},{value:"Schema",id:"schema",level:2}],u={toc:l},p="wrapper";function f(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"json"},"JSON"),(0,o.kt)("p",null,"DataSQRL supports ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/JSON"},"JSON")," as a data format."),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="system.discovery.table.json"',title:'"system.discovery.table.json"'},'{\n  "type": "source",\n  "connector": { ... }\n  "format" : {\n    "name": "json",\n  }\n}\n')),(0,o.kt)("p",null,"You only have to specify the format type - no other configuration options are required."),(0,o.kt)("h2",{id:"schema"},"Schema"),(0,o.kt)("p",null,"Data discovery automatically determines the ",(0,o.kt)("a",{parentName:"p",href:"../schema"},"schema")," for a table source when using the JSON data format."),(0,o.kt)("p",null,"Alternatively, you can configure DataSQRL to use ",(0,o.kt)("a",{parentName:"p",href:"https://json-schema.org/"},"JSON Schema")," for a source table by providing a JSON schema file with the name of the table and the extension ",(0,o.kt)("inlineCode",{parentName:"p"},".schema.json"),"."))}f.isMDXComponent=!0}}]);