"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7987],{5680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>m});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(n),g=o,m=p["".concat(l,".").concat(g)]||p[g]||d[g]||a;return n?r.createElement(m,c(c({ref:t},u),{},{components:n})):r.createElement(m,c({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=g;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:o,c[1]=i;for(var s=2;s<a;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},2638:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var r=n(8168),o=(n(6540),n(5680));const a={title:"Vector Functions"},c="Text Functions",i={unversionedId:"reference/sqrl/functions/vector",id:"reference/sqrl/functions/vector",title:"Vector Functions",description:"The vector function package contains functions for creating and comparing vectors.",source:"@site/docs/reference/sqrl/functions/vector.md",sourceDirName:"reference/sqrl/functions",slug:"/reference/sqrl/functions/vector",permalink:"/docs/reference/sqrl/functions/vector",draft:!1,editUrl:"https://github.com/DataSQRL/datasqrl.github.io/edit/main/docs/reference/sqrl/functions/vector.md",tags:[],version:"current",frontMatter:{title:"Vector Functions"},sidebar:"docs",previous:{title:"JSON Functions",permalink:"/docs/reference/sqrl/functions/json"},next:{title:"Implement Custom Functions",permalink:"/docs/reference/sqrl/functions/custom-functions"}},l={},s=[{value:"Reference",id:"reference",level:2}],u={toc:s},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.yg)(p,(0,r.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"text-functions"},"Text Functions"),(0,o.yg)("p",null,"The ",(0,o.yg)("inlineCode",{parentName:"p"},"vector")," function package contains functions for creating and comparing vectors."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-sql"},"IMPORT vector.*; -- imports all functions\nIMPORT vector.toJson; -- imports single function\n")),(0,o.yg)("h2",{id:"reference"},"Reference"),(0,o.yg)("p",null,"The following table lists all the functions in the ",(0,o.yg)("inlineCode",{parentName:"p"},"vector")," package with a short description."),(0,o.yg)("table",null,(0,o.yg)("thead",{parentName:"table"},(0,o.yg)("tr",{parentName:"thead"},(0,o.yg)("th",{parentName:"tr",align:null},"Function Name"),(0,o.yg)("th",{parentName:"tr",align:null},"Description"))),(0,o.yg)("tbody",{parentName:"table"},(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"center"),(0,o.yg)("td",{parentName:"tr",align:null},"Aggregates vectors by computing the centroid, i.e. summing up all vectors and dividing the resulting vector by the number of vectors.")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"cosineDistance"),(0,o.yg)("td",{parentName:"tr",align:null},"Computes the cosine distance between two vectors")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"cosineSimilarity"),(0,o.yg)("td",{parentName:"tr",align:null},"Computes the cosine similarity between two vectors")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"euclideanDistance"),(0,o.yg)("td",{parentName:"tr",align:null},"Computes the euclidean distance between two vectors")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"onnxEmbed"),(0,o.yg)("td",{parentName:"tr",align:null},"Computes a vector embedding for the given string based on the provided ONNX vector embedding model. The embedding model should be stored in a directory that is accessible at runtime.")),(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"vectorToDouble"),(0,o.yg)("td",{parentName:"tr",align:null},"Converts a vector to a double array")))))}d.isMDXComponent=!0}}]);