"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1663],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>f});var r=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,o=function(e,t){if(null==e)return{};var a,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=r.createContext({}),d=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,o=e.mdxType,n=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=d(a),m=o,f=p["".concat(s,".").concat(m)]||p[m]||c[m]||n;return a?r.createElement(f,i(i({ref:t},u),{},{components:a})):r.createElement(f,i({ref:t},u))}));function f(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=a.length,i=new Array(n);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var d=2;d<n;d++)i[d]=a[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},204:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>l,toc:()=>d});var r=a(7462),o=(a(7294),a(3905));const n={slug:"sql-for-developers",title:"SQRL: Updating SQL for Developers",authors:["matthias"],tags:["SQL","SQRL","database","developer"]},i=void 0,l={permalink:"/blog/sql-for-developers",editUrl:"https://github.com/DataSQRL/datasqrl.github.io/edit/main/blog/blog/2023-01-31-sql-for-developers.md",source:"@site/blog/2023-01-31-sql-for-developers.md",title:"SQRL: Updating SQL for Developers",description:"To make it easier for developers to build data services, we developed the SQRL language which gives SQL a facelift and adds some important features to make it developer friendly, productive, and fun. Here is why we need a modern, developer-focused version of SQL.",date:"2023-01-31T00:00:00.000Z",formattedDate:"January 31, 2023",tags:[{label:"SQL",permalink:"/blog/tags/sql"},{label:"SQRL",permalink:"/blog/tags/sqrl"},{label:"database",permalink:"/blog/tags/database"},{label:"developer",permalink:"/blog/tags/developer"}],readingTime:1.325,hasTruncateMarker:!0,authors:[{name:"Matthias Broecheler",title:"Founder of DataSQRL",url:"https://github.com/mbroecheler",imageURL:"/img/headshots/matthias1.png",key:"matthias"}],frontMatter:{slug:"sql-for-developers",title:"SQRL: Updating SQL for Developers",authors:["matthias"],tags:["SQL","SQRL","database","developer"]},nextItem:{title:"Hello, World!",permalink:"/blog/welcome"}},s={authorsImageUrls:[void 0]},d=[{value:"Data Streams",id:"data-streams",level:2},{value:"Relationships",id:"relationships",level:2},{value:"Nested Data",id:"nested-data",level:2},{value:"Modularity",id:"modularity",level:2}],u={toc:d};function p(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"To make it easier for developers to build data services, we developed the SQRL language which gives SQL a facelift and adds some important features to make it developer friendly, productive, and fun. Here is why we need a modern, developer-focused version of SQL."),(0,o.kt)("p",null,"SQL is the most popular query language and great for manipulating structured data. But SQL is not a great development language, and it's a bit ... well, old. It's a fantastic accomplishment for a 50+ year old language to be in wide-spread use today, but to keep up with the times a lot of features were bolted onto SQL that make it feel a bit frankensteinish today. Yes, we are looking at you SQL:2016."),(0,o.kt)("p",null,'Plus, most developers have a love-hate relationship with SQL because they primarily use it through ORMs or other abstraction layers. That level of indirection can make things unintuitive and embedding SQL as a string is just ugly. That\'s why ORMs have been called "the Vietnam of software engineering", and while an analogy with a major war seems a wee bit dramatic, it does capture developer feelings pretty accurately.'),(0,o.kt)("p",null,"We believe that SQL is the best starting point if you are trying to build with data, but there are a few things missing to make it a productive choice for implementing data services."),(0,o.kt)("h2",{id:"data-streams"},"Data Streams"),(0,o.kt)("h2",{id:"relationships"},"Relationships"),(0,o.kt)("h2",{id:"nested-data"},"Nested Data"),(0,o.kt)("h2",{id:"modularity"},"Modularity"),(0,o.kt)("p",null,"SQRL addresses these shortcomings in SQL while being fully compatible with SQL. Learn more about SQRL or follow a short tutorial to see how you can build a data service in minutes with SQRL."))}p.isMDXComponent=!0}}]);