"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2023/02/02/introducing-sqrl","metadata":{"permalink":"/blog/2023/02/02/introducing-sqrl","editUrl":"https://github.com/DataSQRL/datasqrl.github.io/edit/main/blog/blog/2023-02-02-introducing-sqrl.md","source":"@site/blog/2023-02-02-introducing-sqrl.md","title":"introducing-sqrl","description":"Data management and analysis are at the forefront of modern businesses and applications, with the need for effective and efficient data services growing rapidly. SQL, the widely used relational database language, has been the foundation of data management for decades, but it has its limitations in the realm of data services. This is where SQRL comes into play.","date":"2023-02-02T00:00:00.000Z","formattedDate":"February 2, 2023","tags":[],"readingTime":2.11,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"nextItem":{"title":"SQRL: SQL for Data Services","permalink":"/blog/sql-for-developers"}},"content":"Data management and analysis are at the forefront of modern businesses and applications, with the need for effective and efficient data services growing rapidly. SQL, the widely used relational database language, has been the foundation of data management for decades, but it has its limitations in the realm of data services. This is where SQRL comes into play.\\n\\nSQRL, short for Structured Query and Reaction Language, is a declarative language built on top of SQL that is specifically designed for developing data services. It is a modern alternative to SQL that extends its capabilities, providing developers with a more concise, intuitive, and productive way to work with data.\\n\\nSQRL scripts are written in a SQL-like syntax that is easy to understand, even for developers who are not familiar with SQL. The language is loosely-typed, meaning that the data types of columns and tables are inferred from the input data. This saves time and reduces the need for manual type and schema management. In addition, SQRL supports IMPORT statements to declare data dependencies, allowing developers to easily manage their data sources.\\n\\nOne of the key advantages of SQRL is its incremental table definition feature. This feature allows developers to incrementally build up the logic of their data service by defining tables and columns through a series of SQL-like statements. This structure makes it easier to read and write SQRL scripts, making development more intuitive and less complex.\\n\\nSQRL also adds relationships to SQL, enabling developers to link tables together and explicitly label their relationships. This makes the data structure easier to understand, as the relationships between tables are explicitly defined. Additionally, relationships can be reused across scripts, saving time and making code more maintainable.\\n\\nAnother significant feature of SQRL is its focus on streaming data services. With the rise of real-time data processing, developers need tools that can handle streaming data effectively. SQRL provides the necessary features and performance to handle real-time data processing, making it ideal for developing data services that require low latency and high throughput.\\n\\nIn conclusion, SQRL is the future of data services. It extends the capabilities of SQL and makes data service development more intuitive, efficient, and productive. SQRL is ideal for developers who are looking to build streaming data services, but it also offers features that make it a valuable tool for any data service project. Whether you are a seasoned SQL developer or new to data management, SQRL is an excellent choice for building data services that meet your needs and provide value to your customers."},{"id":"sql-for-developers","metadata":{"permalink":"/blog/sql-for-developers","editUrl":"https://github.com/DataSQRL/datasqrl.github.io/edit/main/blog/blog/2023-01-31-sql-for-developers.md","source":"@site/blog/2023-01-31-sql-for-developers.md","title":"SQRL: SQL for Data Services","description":"To make it easier for developers to build data services, we developed the SQRL language which gives SQL a facelift and adds some important features to make it developer friendly, productive, and fun. Here is why we need a modern, developer-focused version of SQL.","date":"2023-01-31T00:00:00.000Z","formattedDate":"January 31, 2023","tags":[{"label":"SQL","permalink":"/blog/tags/sql"},{"label":"SQRL","permalink":"/blog/tags/sqrl"},{"label":"database","permalink":"/blog/tags/database"},{"label":"developer","permalink":"/blog/tags/developer"}],"readingTime":1.325,"hasTruncateMarker":true,"authors":[{"name":"Matthias Broecheler","title":"Founder of DataSQRL","url":"https://github.com/mbroecheler","imageURL":"/img/headshots/matthias1.png","key":"matthias"}],"frontMatter":{"slug":"sql-for-developers","title":"SQRL: SQL for Data Services","authors":["matthias"],"tags":["SQL","SQRL","database","developer"]},"prevItem":{"title":"introducing-sqrl","permalink":"/blog/2023/02/02/introducing-sqrl"},"nextItem":{"title":"Hello, World!","permalink":"/blog/welcome"}},"content":"To make it easier for developers to build data services, we developed the SQRL language which gives SQL a facelift and adds some important features to make it developer friendly, productive, and fun. Here is why we need a modern, developer-focused version of SQL.\\n\\n\x3c!--truncate--\x3e\\n\\nSQL is the most popular query language and great for manipulating structured data. But SQL is not a great development language, and it\'s a bit ... well, old. It\'s a fantastic accomplishment for a 50+ year old language to be in wide-spread use today, but to keep up with the times a lot of features were bolted onto SQL that make it feel a bit frankensteinish today. Yes, we are looking at you SQL:2016.\\n\\nPlus, most developers have a love-hate relationship with SQL because they primarily use it through ORMs or other abstraction layers. That level of indirection can make things unintuitive and embedding SQL as a string is just ugly. That\'s why ORMs have been called \\"the Vietnam of software engineering\\", and while an analogy with a major war seems a wee bit dramatic, it does capture developer feelings pretty accurately.\\n\\nWe believe that SQL is the best starting point if you are trying to build with data, but there are a few things missing to make it a productive choice for implementing data services.\\n\\n## Data Streams\\n\\n\\n## Relationships\\n\\n\\n## Nested Data\\n\\n\\n## Modularity\\n\\n\\n\\nSQRL addresses these shortcomings in SQL while being fully compatible with SQL. Learn more about SQRL or follow a short tutorial to see how you can build a data service in minutes with SQRL."},{"id":"welcome","metadata":{"permalink":"/blog/welcome","editUrl":"https://github.com/DataSQRL/datasqrl.github.io/edit/main/blog/blog/2023-01-26-welcome.md","source":"@site/blog/2023-01-26-welcome.md","title":"Hello, World!","description":"We are excited to launch DataSQRL with the mission to help developers and organizations build with data.","date":"2023-01-26T00:00:00.000Z","formattedDate":"January 26, 2023","tags":[{"label":"DataSQRL","permalink":"/blog/tags/data-sqrl"}],"readingTime":1.645,"hasTruncateMarker":true,"authors":[{"name":"Matthias Broecheler","title":"Founder of DataSQRL","url":"https://github.com/mbroecheler","imageURL":"/img/headshots/matthias1.png","key":"matthias"}],"frontMatter":{"slug":"welcome","title":"Hello, World!","authors":["matthias"],"tags":["DataSQRL"]},"prevItem":{"title":"SQRL: SQL for Data Services","permalink":"/blog/sql-for-developers"}},"content":"We are excited to launch [DataSQRL](/about) with the mission to help developers and organizations build with data.\\n\\nCollectively, we have spent decades building or helping others build data services. We have seen many struggles, failures, and piles of money being thrown out the window and figured that there must be a better way. We started DataSQRL to find it.\\n\\nWe believe that the technologies used to build data services are too complex and that the engineering processes used to build them are broken. Here is how we plan to fix these issues.\\n\\n\x3c!--truncate--\x3e\\n\\n\\nWe developed [DataSQRL](/) which  compiles an enhanced version of SQL - called SQRL - into a fully integrated and optimized data pipeline and API server. It takes care of all the laborious plumbing, data massaging, and stitching together of technologies that makes building data services so harrowing. Check out this short tutorial to see how it works - it only takes a few minutes to build an end-to-end data service.\\n\\nIn addition, we are refining a value-focused process for implementing data services that we have developed over the years while working with development teams and organizations. The basic idea is to apply the same software engineering principles that have proven to be successful to implementing data services. That means you don\'t need a dedicated team of specialists to implement data services and can keep your customers and stakeholders in the feedback loop. Click here to learn more about our process.\\n\\nThat\'s a good starting point for enabling developers to build successful data services quickly and efficiently. But we don\'t think we have all the answers.<br />\\nWe hope that you will join the [DataSQRL community](/community) to share your experience, insights, and opinions. <br />\\nIf you are trying to enable your organization to turn data into valuable data services, consider [working with us](/services) and [get in touch](/contact).\\n\\nWe are excited to be on this journey and hope you will join us. Let\'s build with data together."}]}')}}]);