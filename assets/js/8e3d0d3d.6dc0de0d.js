"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8310],{5680:(e,t,a)=>{a.d(t,{xA:()=>d,yg:()=>g});var n=a(6540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=u(a),m=r,g=c["".concat(s,".").concat(m)]||c[m]||p[m]||o;return a?n.createElement(g,i(i({ref:t},d),{},{components:a})):n.createElement(g,i({ref:t},d))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},6883:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var n=a(8168),r=(a(6540),a(5680));const o={slug:"lets-uplevel-database-datasqrl",title:"Let's Uplevel Our Database Game: Meet DataSQRL",authors:["matthias"],tags:["DataSQRL","community"]},i="Let\u2019s Uplevel Our Database Game: Meet DataSQRL!",l={permalink:"/blog/lets-uplevel-database-datasqrl",editUrl:"https://github.com/DataSQRL/datasqrl.github.io/edit/main/blog/2023-05-15-lets-uplevel-database-datasqrl.md",source:"@site/blog/2023-05-15-lets-uplevel-database-datasqrl.md",title:"Let's Uplevel Our Database Game: Meet DataSQRL",description:"We need to make it easier to build data-driven applications. Databases are great if all your application needs is storing and retrieving data. But if you want to build anything more interesting with data - like serving users recommendations based on the pages they are visiting, detecting fraudulent transactions on your site, or computing real-time features for your machine learning model - you end up building a ton of custom code and infrastructure around the database.",date:"2023-05-15T00:00:00.000Z",formattedDate:"May 15, 2023",tags:[{label:"DataSQRL",permalink:"/blog/tags/data-sqrl"},{label:"community",permalink:"/blog/tags/community"}],readingTime:4.79,hasTruncateMarker:!0,authors:[{name:"Matthias Broecheler",title:"CEO of DataSQRL",url:"https://github.com/mbroecheler",imageURL:"/img/headshots/matthias1.png",key:"matthias"}],frontMatter:{slug:"lets-uplevel-database-datasqrl",title:"Let's Uplevel Our Database Game: Meet DataSQRL",authors:["matthias"],tags:["DataSQRL","community"]},prevItem:{title:"SQRL: Enhancing SQL to a High-Level Data Language",permalink:"/blog/sqrl-high-level-data-language-sql"},nextItem:{title:"DataSQRL 0.1: A SQRL is born",permalink:"/blog/datasqrl-01-release"}},s={authorsImageUrls:[void 0]},u=[],d={toc:u},c="wrapper";function p(e){let{components:t,...a}=e;return(0,r.yg)(c,(0,n.A)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"We need to make it easier to build data-driven applications.")," Databases are great if all your application needs is storing and retrieving data. But if you want to build anything more interesting with data - like serving users recommendations based on the pages they are visiting, detecting fraudulent transactions on your site, or computing real-time features for your machine learning model - you end up building a ton of custom code and infrastructure around the database."),(0,r.yg)("a",{href:"https://www.youtube.com/watch?v=m5uYtBFSmUs&ab_channel=DataSQRL",target:"_blank"},(0,r.yg)("img",{src:"/img/blog/uplevel_play_image.jpg",alt:"Watch the video version >|",width:"50%"})),(0,r.yg)("p",null,"You need a queue like Kafka to hold your events, a stream processor like Flink to process data, a database like Postgres to store and query the result data, and an API layer to tie it all together."),(0,r.yg)("p",null,"And that\u2019s just the price of admission. To get a functioning data layer, you need to make sure that all these components talk to each other and that data flows smoothly between them. Schema synchronization, data model tuning, index selection, query batching \u2026 all that fun stuff."),(0,r.yg)("p",null,"The point is, you need to do a ton of data plumbing if you want to build a data-driven application. All that data plumbing code is time-consuming to develop, hard to maintain, and expensive to operate."),(0,r.yg)("p",null,"We need to make building with data easier. That\u2019s why we are sending out this call to action to uplevel our database game. ",(0,r.yg)("strong",{parentName:"p"},"Join us in figuring out how to simplify the data layer.")),(0,r.yg)("p",null,"We have an idea to get us started: Meet DataSQRL."))}p.isMDXComponent=!0}}]);