"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4196],{5680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>y});var n=a(6540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),l=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=l(a),g=r,y=m["".concat(s,".").concat(g)]||m[g]||d[g]||o;return a?n.createElement(y,i(i({ref:t},c),{},{components:a})):n.createElement(y,i({ref:t},c))}));function y(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=g;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[m]="string"==typeof e?e:r,i[1]=p;for(var l=2;l<o;l++)i[l]=a[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},8126:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var n=a(8168),r=(a(6540),a(5680));const o={},i="Import",p={unversionedId:"reference/sqrl/import",id:"reference/sqrl/import",title:"Import",description:"The IMPORT statements imports tables and functions into an SQRL script. Tables can either be imported from an external data source or another SQRL script.",source:"@site/docs/reference/sqrl/import.md",sourceDirName:"reference/sqrl",slug:"/reference/sqrl/import",permalink:"/docs/reference/sqrl/import",draft:!1,editUrl:"https://github.com/DataSQRL/datasqrl.github.io/edit/main/docs/reference/sqrl/import.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Time",permalink:"/docs/reference/sqrl/time"},next:{title:"Export",permalink:"/docs/reference/sqrl/export"}},s={},l=[{value:"Package Resolution",id:"package-resolution",level:2},{value:"Locally",id:"locally",level:3},{value:"Dependency",id:"dependency",level:3},{value:"Standard Library",id:"standard-library",level:3},{value:"Changing Names",id:"changing-names",level:2},{value:"Setting Timestamps",id:"timestamp",level:2},{value:"Creating A Package",id:"creating-a-package",level:2}],c={toc:l},m="wrapper";function d(e){let{components:t,...a}=e;return(0,r.yg)(m,(0,n.A)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"import"},"Import"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"IMPORT")," statements imports tables and functions into an SQRL script. Tables can either be imported from an external data source or another SQRL script."),(0,r.yg)("p",null,"Tables and functions are imported from ",(0,r.yg)("a",{parentName:"p",href:"../../concepts/package"},"packages"),". The import path is the name of the package followed by the name of a specific table or function to import or the asterisk character ",(0,r.yg)("inlineCode",{parentName:"p"},"*")," to import all tables and functions from the package. Import paths use the dot character ",(0,r.yg)("inlineCode",{parentName:"p"},".")," to separate path components."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"IMPORT datasqrl.seedshop.Orders;\nIMPORT time.*;\n")),(0,r.yg)("p",null,"The first statement imports a table named ",(0,r.yg)("inlineCode",{parentName:"p"},"Orders")," from the package ",(0,r.yg)("inlineCode",{parentName:"p"},"datasqrl.seedshop"),". The second imports all functions from the ",(0,r.yg)("inlineCode",{parentName:"p"},"time")," package."),(0,r.yg)("h2",{id:"package-resolution"},"Package Resolution"),(0,r.yg)("p",null,"Packages are either part of the standard SQRL library, declared as a dependency, or stored in a local directory."),(0,r.yg)("h3",{id:"locally"},"Locally"),(0,r.yg)("p",null,"Packages are looked up locally first. The package name path is converted to a directory path relative to the directory in which the DataSQRL ",(0,r.yg)("a",{parentName:"p",href:"../../operations/command"},"command")," is invoked."),(0,r.yg)("p",null,"A package with the name ",(0,r.yg)("inlineCode",{parentName:"p"},"my.data")," is translated to the relative directory path ",(0,r.yg)("inlineCode",{parentName:"p"},"my/data")," (on Unix based systems) or ",(0,r.yg)("inlineCode",{parentName:"p"},"my\\data")," (on Windows)."),(0,r.yg)("p",null,"If this directory exists, imported tables and functions are located inside that directory."),(0,r.yg)("h3",{id:"dependency"},"Dependency"),(0,r.yg)("p",null,"Dependencies are declared in the ",(0,r.yg)("a",{parentName:"p",href:"../../operations/package-config#dependency"},"package configuration")," and downloaded from a ",(0,r.yg)("a",{parentName:"p",href:"../../operations/repository"},"repository")," at compile time."),(0,r.yg)("p",null,"By default, DataSQRL looks up any missing packages in the ",(0,r.yg)("a",{parentName:"p",href:"https://dev.datasqrl.com"},"repository"),". A package is missing if it is not declared as dependencies and cannot be resolved locally. If the missing package can be located in the repository, a dependency on the most recent version of that package is added to the package configuration."),(0,r.yg)("p",null,"Take a look at the DataSQRL ",(0,r.yg)("a",{parentName:"p",href:"https://dev.datasqrl.com"},"repository")," to find public packages you can import into your script. (coming soon)"),(0,r.yg)("p",null,"You can ",(0,r.yg)("a",{parentName:"p",href:"../../operations/repository"},"publish")," your own packages to the repository, so they can be used as dependencies in your SQRL scripts."),(0,r.yg)("h3",{id:"standard-library"},"Standard Library"),(0,r.yg)("p",null,"The SQRL standard library contains function packages that can be imported without any configuration. For example, ",(0,r.yg)("inlineCode",{parentName:"p"},"time")," is a standard library function package that contains functions for manipulating timestamps. See the ",(0,r.yg)("a",{parentName:"p",href:"/docs/category/functions"},"list of function packages")," for more information."),(0,r.yg)("h2",{id:"changing-names"},"Changing Names"),(0,r.yg)("p",null,"To import a table or function under a different name, use ",(0,r.yg)("inlineCode",{parentName:"p"},"AS")," directly after the import path:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"IMPORT datasqrl.seedshop.Orders AS MyOrders;\nIMPORT time.epochMilliToTimestamp AS epoch2TS; \n")),(0,r.yg)("p",null,"This statement imports the same ",(0,r.yg)("inlineCode",{parentName:"p"},"Orders")," table from the ",(0,r.yg)("inlineCode",{parentName:"p"},"datasqrl.seedshop")," but makes it available under the name ",(0,r.yg)("inlineCode",{parentName:"p"},"MyOrders")," in the script. Likewise, the ",(0,r.yg)("inlineCode",{parentName:"p"},"epochMilliToTimestamp")," is imported under the name ",(0,r.yg)("inlineCode",{parentName:"p"},"epoch2TS"),"."),(0,r.yg)("p",null,"You can change the name of imported tables and functions to resolve naming conflicts or choose names that are a better fit for your script."),(0,r.yg)("h2",{id:"timestamp"},"Setting Timestamps"),(0,r.yg)("p",null,"Timestamps are important for ",(0,r.yg)("a",{parentName:"p",href:"../stream"},"stream tables"),". In many cases, the DataSQRL compiler can determine the timestamp of a stream table. In other cases, you can declare the timestamp of a data source table explicitly:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"IMPORT datasqrl.seedshop.Orders TIMESTAMP timestamp;\n")),(0,r.yg)("p",null,"This statement declares that the ",(0,r.yg)("inlineCode",{parentName:"p"},"timestamp")," column on the ",(0,r.yg)("inlineCode",{parentName:"p"},"Orders")," table must be used as the timestamp."),(0,r.yg)("p",null,"The timestamp declaration can also be an expression to process the input data to produce a valid timestamp."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"IMPORT time.epochMilliToTimestamp;\nIMPORT datasqrl.seedshop.Customers TIMESTAMP epochMilliToTimestamp(changed_on) AS timestamp;\n")),(0,r.yg)("p",null,"In this import statement we convert the integer ",(0,r.yg)("inlineCode",{parentName:"p"},"changed_on")," column to a timestamp via the ",(0,r.yg)("inlineCode",{parentName:"p"},"epochMilliToTimestamp")," function. When an expression is used to declare a timestamp it is added as a column to the table and must be given a name after the ",(0,r.yg)("inlineCode",{parentName:"p"},"AS")," keyword."),(0,r.yg)("admonition",{type:"info"},(0,r.yg)("p",{parentName:"admonition"},"Declaring a timestamp is only possible for tables that are imported directly from a data source.")),(0,r.yg)("h2",{id:"creating-a-package"},"Creating A Package"),(0,r.yg)("p",null,"To create a new package to import your own tables or functions into a SQRL script, read the following documentation:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"../../sources/overview"},(0,r.yg)("strong",{parentName:"a"},"Data Source Package")),": to create a package that contains tables from an external data source"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"../functions/custom-functions"},(0,r.yg)("strong",{parentName:"a"},"Function Package")),": to create a package that contains custom function implementations"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"SQRL Script")," (coming soon): to import tables defined in another SQRL script")))}d.isMDXComponent=!0}}]);