"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7388],{5680:(e,t,a)=>{a.d(t,{xA:()=>u,yg:()=>g});var r=a(6540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),c=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(a),m=n,g=p["".concat(s,".").concat(m)]||p[m]||d[m]||l;return a?r.createElement(g,o(o({ref:t},u),{},{components:a})):r.createElement(g,o({ref:t},u))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:n,o[1]=i;for(var c=2;c<l;c++)o[c]=a[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9365:(e,t,a)=>{a.d(t,{A:()=>o});var r=a(6540),n=a(53);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:a,className:o}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.A)(l.tabItem,o),hidden:a},t)}},1470:(e,t,a)=>{a.d(t,{A:()=>T});var r=a(8168),n=a(6540),l=a(53),o=a(3104),i=a(6347),s=a(7485),c=a(1682),u=a(9466);function p(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:r,default:n}}=e;return{value:t,label:a,attributes:r,default:n}}))}function d(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??p(a);return function(e){const t=(0,c.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function m(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:a}=e;const r=(0,i.W6)(),l=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s.aZ)(l),(0,n.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(r.location.search);t.set(l,e),r.replace({...r.location,search:t.toString()})}),[l,r])]}function y(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,l=d(e),[o,i]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:l}))),[s,c]=g({queryString:a,groupId:r}),[p,y]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,l]=(0,u.Dv)(a);return[r,(0,n.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:r}),h=(()=>{const e=s??p;return m({value:e,tabValues:l})?e:null})();(0,n.useLayoutEffect)((()=>{h&&i(h)}),[h]);return{selectedValue:o,selectValue:(0,n.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),y(e)}),[c,y,l]),tabValues:l}}var h=a(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f(e){let{className:t,block:a,selectedValue:i,selectValue:s,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.a_)(),d=e=>{const t=e.currentTarget,a=u.indexOf(t),r=c[a].value;r!==i&&(p(t),s(r))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=u.indexOf(e.currentTarget)+1;t=u[a]??u[0];break}case"ArrowLeft":{const a=u.indexOf(e.currentTarget)-1;t=u[a]??u[u.length-1];break}}t?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":a},t)},c.map((e=>{let{value:t,label:a,attributes:o}=e;return n.createElement("li",(0,r.A)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:d},o,{className:(0,l.A)("tabs__item",b.tabItem,o?.className,{"tabs__item--active":i===t})}),a??t)})))}function v(e){let{lazy:t,children:a,selectedValue:r}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function N(e){const t=y(e);return n.createElement("div",{className:(0,l.A)("tabs-container",b.tabList)},n.createElement(f,(0,r.A)({},e,t)),n.createElement(v,(0,r.A)({},e,t)))}function T(e){const t=(0,h.A)();return n.createElement(N,(0,r.A)({key:String(t)},e))}},8221:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>g,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var r=a(8168),n=(a(6540),a(5680)),l=a(1470),o=a(9365);const i={},s="CLI Reference",c={unversionedId:"reference/sqrl/cli",id:"reference/sqrl/cli",title:"CLI Reference",description:"DataSQRL is managed through the datasqrl command line interface. This tool enables you to compile SQRL scripts, manage data sources and sinks, and handle package publications.",source:"@site/docs/reference/sqrl/cli.md",sourceDirName:"reference/sqrl",slug:"/reference/sqrl/cli",permalink:"/docs/reference/sqrl/cli",draft:!1,editUrl:"https://github.com/DataSQRL/datasqrl.github.io/edit/main/docs/reference/sqrl/cli.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"DataSQRL Reference",permalink:"/docs/reference/sqrl/datasqrl-spec"},next:{title:"Functions",permalink:"/docs/category/functions"}},u={},p=[{value:"Global Options",id:"global-options",level:4},{value:"Compile Command",id:"compile-command",level:4},{value:"Publish Command",id:"publish-command",level:4},{value:"How repository resolution works",id:"how-repository-resolution-works",level:5},{value:"Test Command",id:"test-command",level:4},{value:"Login Command",id:"login-command",level:4}],d={toc:p},m="wrapper";function g(e){let{components:t,...a}=e;return(0,n.yg)(m,(0,r.A)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"cli-reference"},"CLI Reference"),(0,n.yg)("p",null,"DataSQRL is managed through the ",(0,n.yg)("inlineCode",{parentName:"p"},"datasqrl")," command line interface. This tool enables you to compile SQRL scripts, manage data sources and sinks, and handle package publications."),(0,n.yg)(l.A,{groupId:"cli",mdxType:"Tabs"},(0,n.yg)(o.A,{value:"Mac",default:!0,mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"brew tap datasqrl/sqrl\nbrew install sqrl-cli\n")),(0,n.yg)("admonition",{type:"note"},(0,n.yg)("p",{parentName:"admonition"},"Check that you're on the current version of DataSQRL by running ",(0,n.yg)("inlineCode",{parentName:"p"},"sqrl --version"),"\nTo update an existing installation:"),(0,n.yg)("pre",{parentName:"admonition"},(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"brew upgrade sqrl-cli\n")))),(0,n.yg)(o.A,{value:"Docker",mdxType:"TabItem"},"Always pull the latest Docker image to ensure you have the most recent updates:",(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"docker pull datasqrl/cmd:latest\n")))),(0,n.yg)("h4",{id:"global-options"},"Global Options"),(0,n.yg)("p",null,"All commands support the following global options:"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Option/Flag Name"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"-c or --config"),(0,n.yg)("td",{parentName:"tr",align:null},"Specifies the path to one or more package configuration files. Contents of multiple files are merged in the specified order. Defaults to package.json in the current directory, generating a default configuration if none exists.")))),(0,n.yg)("h4",{id:"compile-command"},"Compile Command"),(0,n.yg)("p",null,"The compile command processes an SQRL script and, optionally, an API specification, into a deployable data pipeline. The outputs are saved in the specified target directory."),(0,n.yg)(l.A,{groupId:"cli",mdxType:"Tabs"},(0,n.yg)(o.A,{value:"Mac",default:!0,mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"sqrl compile myscript.sqrl myapischema.graphqls\n"))),(0,n.yg)(o.A,{value:"Docker",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"docker run --rm -v $PWD:/build datasqrl/cmd compile myscript.sqrl myapischema.graphqls\n")))),"1. sqrl compile 2. docker run --rm -v $PWD:/build datasqrl/cmd compile myscript.sqrl myapischema.graphqls",(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Option/Flag Name"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"-a or --api"),(0,n.yg)("td",{parentName:"tr",align:null},"Generates an API specification (GraphQL schema) in the file schema.graphqls. Overwrites any existing file with the same name.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"-t or --target"),(0,n.yg)("td",{parentName:"tr",align:null},"Directory to write deployment artifacts, defaults to build/deploy.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"--profile"),(0,n.yg)("td",{parentName:"tr",align:null},"Selects a specific set of configuration values that override the default package settings.")))),(0,n.yg)("p",null,"The command compiles the script and API specification into an integrated data product. The command creates a ",(0,n.yg)("inlineCode",{parentName:"p"},"build")," with all the build artifacts that are used during the compilation and build process (e.g. dependencies). The command writes the deployment artifacts for the compiled data product into the ",(0,n.yg)("inlineCode",{parentName:"p"},"build/deploy")," directory. Read more about deployment artifacts in the deployment documentation."),(0,n.yg)("h4",{id:"publish-command"},"Publish Command"),(0,n.yg)("p",null,"Publishes a local package to the repository. It is executed from the root directory of the package, archiving all contents and submitting them under the specified package configuration."),(0,n.yg)(l.A,{groupId:"cli",mdxType:"Tabs"},(0,n.yg)(o.A,{value:"Mac",default:!0,mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"sqrl publish --local\n"))),(0,n.yg)(o.A,{value:"Docker",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"docker run --rm -v $PWD:/build datasqrl/cmd publish --local\n")))),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Option/Flag Name"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"--local"),(0,n.yg)("td",{parentName:"tr",align:null},"Publishes the package to the local repository only.")))),(0,n.yg)("h5",{id:"how-repository-resolution-works"},"How repository resolution works"),(0,n.yg)("p",null,"A repository contains DataSQRL packages. When compiling an SQRL script, the DataSQRL compiler retrieves dependencies declared in the ",(0,n.yg)("a",{parentName:"p",href:"/docs/reference/sqrl/datasqrl-spec"},"package configuration")," and unpacks them in the build directory."),(0,n.yg)("p",null,"The remote DataSQRL directory is hosted at ",(0,n.yg)("a",{parentName:"p",href:"https://dev.datasqrl.com"},"https://dev.datasqrl.com"),". Packages in the remote repository can be retrieved from any machine running the DataSQRL compiler with access to the internet."),(0,n.yg)("p",null,"DataSQRL keeps a local repository in the hidden ",(0,n.yg)("inlineCode",{parentName:"p"},"~/.datasqrl/")," directory in the user's home directory. The local repository is only accessible from the local machine. It caches packages downloaded from the remote repository and contains packages that are only published locally."),(0,n.yg)("h4",{id:"test-command"},"Test Command"),(0,n.yg)("p",null,"The test command will run queries annotationed with the 'test' hint."),(0,n.yg)(l.A,{groupId:"cli",mdxType:"Tabs"},(0,n.yg)(o.A,{value:"Mac",default:!0,mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"sqrl test\n"))),(0,n.yg)(o.A,{value:"Docker",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"docker run --rm -v $PWD:/build datasqrl/cmd test\n")))),(0,n.yg)("p",null,"Options for the Test Command:"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Option/Flag Name"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"-s or --snapshot"),(0,n.yg)("td",{parentName:"tr",align:null},"Path to the snapshot files.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"--tests"),(0,n.yg)("td",{parentName:"tr",align:null},"Path to test query files.")))),(0,n.yg)("p",null,"More information on specific test configurations and command examples will be provided here."),(0,n.yg)("h4",{id:"login-command"},"Login Command"),(0,n.yg)("p",null,"Authenticates a user against the repository."),(0,n.yg)(l.A,{groupId:"cli",mdxType:"Tabs"},(0,n.yg)(o.A,{value:"Mac",default:!0,mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"sqrl login\n"))),(0,n.yg)(o.A,{value:"Docker",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"docker run --rm -v $PWD:/build datasqrl/cmd login\n")))))}g.isMDXComponent=!0}}]);